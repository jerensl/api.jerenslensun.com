name: Build and Test 

on:
  push:
    branches:
      - main
  pull_request:
      types: [opened, synchronize]
      branches:
      - main

jobs:
  build-docker:
    environment: test
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.23.4'
    - uses: microsoft/variable-substitution@v1 
      with:
          files: 'service-account.json'
      env:
          project_id: ${{ secrets.PROJECT_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
          private_key_id: ${{ secrets.PRIVATE_KEY_ID }}
          client_email: ${{ secrets.CLIENT_EMAIL }}
          client_id: ${{ secrets.CLIENT_ID }}
          client_x509_cert_url: ${{ secrets.CLIENT_X509_CERT_URL }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: network=host
    - name: Build and push to local registry
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: localhost:5000/jerens-web-api/app:latest
        file: docker/app-prod/Dockerfile
    - name: Inspect
      run: |
        docker buildx imagetools inspect localhost:5000/jerens-web-api/app:latest        
  test:
    environment: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.23.4'
    - uses: microsoft/variable-substitution@v1 
      with:
          files: 'service-account.json'
      env:
          project_id: ${{ secrets.PROJECT_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
          private_key_id: ${{ secrets.PRIVATE_KEY_ID }}
          client_email: ${{ secrets.CLIENT_EMAIL }}
          client_id: ${{ secrets.CLIENT_ID }}
          client_x509_cert_url: ${{ secrets.CLIENT_X509_CERT_URL }}
    - name: Unit and Integration test
      working-directory: ./internal
      run: go test ./... -coverprofile=../coverage.out -covermode=atomic
      env:
        PORT: ${{ secrets.PORT }}
        HTTP_ADDR: ${{ secrets.HTTP_ADDR }}
        SQLITE_DB: ${{ secrets.SQLITE_DB }}
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        SERVICE_ACCOUNT_FILE: ${{ secrets.SERVICE_ACCOUNT_FILE }}
        CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
        API_KEY: ${{ secrets.API_KEY }}
    - name: Upload code coverage to Codecov
      uses: codecov/codecov-action@v5
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}